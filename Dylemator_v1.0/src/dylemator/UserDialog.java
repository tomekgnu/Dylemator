/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package dylemator;

import java.awt.Color;
import javax.swing.JFrame;

/**
 *
 * @author a144899
 */
public class UserDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewJDialog
     */
    private final JFrame parent;
    // Personal information
    private String name;
    private String surname;
    private String code;
    private int age;
    private int gender;
    private int place;
    private int handedness;
    private int educationYears;
    
    // Interview
    private boolean headInj;
    private boolean addict;
    private boolean neurotr;
    private boolean psychotr;
    private boolean onDrugs;
    private boolean memoryPb;
    
    @Override
    public String getName(){
        return name;
    }
    public String getCode(){
        return code;
    }
    public String getSurname(){
        return surname;
    }
    public int getEducationYears(){
        return educationYears;
    }
    public int getHandedness(){
        return handedness;
    }   

    public int getAge(){
        return age;
    }
    int getGender(){
        return gender;
    }
    public UserDialog(javax.swing.JFrame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        userPane = new javax.swing.JTabbedPane();
        basicInformation = new javax.swing.JPanel();
        genderComboBox = new javax.swing.JComboBox();
        surnameLabel = new javax.swing.JLabel();
        ageInput = new javax.swing.JTextField();
        educationYearsLabel = new javax.swing.JLabel();
        educationYearsInput = new javax.swing.JTextField();
        handInput = new javax.swing.JComboBox();
        surnameInput = new javax.swing.JTextField();
        ageLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        codeLabel = new javax.swing.JLabel();
        codeInput = new javax.swing.JTextField();
        codeLabel1 = new javax.swing.JLabel();
        placeCombo = new javax.swing.JComboBox();
        detailedInformation = new javax.swing.JPanel();
        addictCheckbox = new javax.swing.JCheckBox();
        memoryPbCheckbox = new javax.swing.JCheckBox();
        drugCheckbox = new javax.swing.JCheckBox();
        psychoTrCheckbox = new javax.swing.JCheckBox();
        headCheckbox = new javax.swing.JCheckBox();
        neuroTrCheckbox = new javax.swing.JCheckBox();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("Dane użytkownika"), this, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        basicInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        genderComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mężczyzna", "Kobieta" }));
        genderComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderComboBoxActionPerformed(evt);
            }
        });

        surnameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        surnameLabel.setText("Nazwisko");

        ageInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        educationYearsLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        educationYearsLabel.setText("Liczba lat edukacji");

        educationYearsInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        handInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        handInput.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Praworęcz.", "Leworęcz." }));
        handInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handInputActionPerformed(evt);
            }
        });

        surnameInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        ageLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ageLabel.setText("Wiek");

        nameInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        genderLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        genderLabel.setText("Płeć");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nameLabel.setText("Imię");

        codeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codeLabel.setText("Kod osoby");

        codeInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codeInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                codeInputFocusGained(evt);
            }
        });

        codeLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        codeLabel1.setText("Miejsce zamieszkania");

        placeCombo.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        placeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Wieś", "Małe miasto", "Duże miasto" }));
        placeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout basicInformationLayout = new javax.swing.GroupLayout(basicInformation);
        basicInformation.setLayout(basicInformationLayout);
        basicInformationLayout.setHorizontalGroup(
            basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicInformationLayout.createSequentialGroup()
                        .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(basicInformationLayout.createSequentialGroup()
                        .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(basicInformationLayout.createSequentialGroup()
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(surnameInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                        .addComponent(nameInput, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(codeInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, basicInformationLayout.createSequentialGroup()
                                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(codeLabel1)
                                    .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(basicInformationLayout.createSequentialGroup()
                                        .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(placeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(basicInformationLayout.createSequentialGroup()
                                        .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(handInput, 0, 113, Short.MAX_VALUE)
                                            .addComponent(genderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(16, 16, 16))
                    .addGroup(basicInformationLayout.createSequentialGroup()
                        .addComponent(educationYearsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(educationYearsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        basicInformationLayout.setVerticalGroup(
            basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(basicInformationLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(nameInput))
                    .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codeLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(placeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(basicInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(educationYearsLabel)
                    .addComponent(educationYearsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(handInput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        userPane.addTab("Dane osobowe", basicInformation);

        detailedInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N

        addictCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addictCheckbox.setText("Uzależnienia");
        addictCheckbox.setToolTipText("Czy jest Pan/i uzależniona od alkoholu narkotyków lub innych środków psychoaktywnych?");
        addictCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addictCheckboxActionPerformed(evt);
            }
        });

        memoryPbCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        memoryPbCheckbox.setText("Problemy z pamięcią");
        memoryPbCheckbox.setToolTipText("Czy zauważa Pan/i u siebie u siebie poważne problemy z pamięcią?");
        memoryPbCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memoryPbCheckboxActionPerformed(evt);
            }
        });

        drugCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        drugCheckbox.setText("Aktualnie zażywa leki psychiatryczne");
        drugCheckbox.setToolTipText("Czy aktualnie zażywa Pan/i jakieś leki psychiatryczne?");
        drugCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drugCheckboxActionPerformed(evt);
            }
        });

        psychoTrCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        psychoTrCheckbox.setText("Przebyte leczenie psychiatryczne");
        psychoTrCheckbox.setToolTipText("Czy leczył się kiedyś Pan/i z powodu problemów psychiatrycznych (np. lękowych lub depresyjnych)?");
        psychoTrCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                psychoTrCheckboxActionPerformed(evt);
            }
        });

        headCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        headCheckbox.setText("Urazy głowy w historii życia");
        headCheckbox.setToolTipText("Czy w historii życia miał Pan/i jakieś urazy głowy?");
        headCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                headCheckboxActionPerformed(evt);
            }
        });

        neuroTrCheckbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        neuroTrCheckbox.setText("Przebyte leczenie neurologiczne");
        neuroTrCheckbox.setToolTipText("Czy leczył się kiedyś Pan/i kiedyś z powodu problemów neurologicznych?");
        neuroTrCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                neuroTrCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout detailedInformationLayout = new javax.swing.GroupLayout(detailedInformation);
        detailedInformation.setLayout(detailedInformationLayout);
        detailedInformationLayout.setHorizontalGroup(
            detailedInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailedInformationLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(detailedInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addictCheckbox)
                    .addComponent(neuroTrCheckbox)
                    .addComponent(headCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(psychoTrCheckbox)
                    .addComponent(drugCheckbox)
                    .addComponent(memoryPbCheckbox))
                .addContainerGap(74, Short.MAX_VALUE))
        );
        detailedInformationLayout.setVerticalGroup(
            detailedInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailedInformationLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(headCheckbox)
                .addGap(18, 18, 18)
                .addComponent(neuroTrCheckbox)
                .addGap(18, 18, 18)
                .addComponent(psychoTrCheckbox)
                .addGap(18, 18, 18)
                .addComponent(drugCheckbox)
                .addGap(18, 18, 18)
                .addComponent(memoryPbCheckbox)
                .addGap(18, 18, 18)
                .addComponent(addictCheckbox)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        userPane.addTab("Wywiad", detailedInformation);

        okButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userPane)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(userPane, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.nameLabel.setForeground(Color.black);
        this.surnameLabel.setForeground(Color.black);
        this.codeLabel.setForeground(Color.black);
        this.ageLabel.setForeground(Color.black);
        this.educationYearsInput.setForeground(Color.black); 
        name = this.nameInput.getText();
       
        if(name == null || name.equals("")){
            this.nameLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            return;
        }
        surname = this.surnameInput.getText();
        if(surname == null || surname.equals("")){
            this.surnameLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            return;
        }
         
        code = this.codeInput.getText();
        this.codeInput.setToolTipText(null);
        this.codeInput.setForeground(Color.black);
        if(FindDialog.codeExists(code) == true){
            this.codeLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            this.codeInput.setForeground(Color.red);
            this.codeInput.setToolTipText("Ten kod już istnieje!");
            return;
        }
        if(code == null || code.equals("")){
            this.codeLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            return;
        }
       
       gender = (this.genderComboBox.getSelectedIndex() == 0?1:2);
              
        try{
            age = Integer.parseInt(this.ageInput.getText());
        }catch(NumberFormatException ex){
            this.ageLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            return;
        }
       
        
        try{
            educationYears = Integer.parseInt(this.educationYearsInput.getText());
        }catch(NumberFormatException ex){
            this.educationYearsLabel.setForeground(Color.red);
            this.userPane.setSelectedIndex(0);
            return;
        }
       switch(this.placeCombo.getSelectedIndex()){
           case 0:  this.place = 1;
                    break;
           case 1:  this.place = 2;
                    break;
           case 2:  this.place = 3;
                    break;
       }        
       handedness = (this.handInput.getSelectedIndex() == 0?1:2);
       this.onDrugs = this.drugCheckbox.isSelected();
       this.headInj = this.headCheckbox.isSelected();
       this.neurotr = this.neuroTrCheckbox.isSelected();
       this.psychotr = this.psychoTrCheckbox.isSelected();
       this.addict = this.addictCheckbox.isSelected();
       this.memoryPb = this.memoryPbCheckbox.isSelected();
       this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void genderComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_genderComboBoxActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing

    private void handInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_handInputActionPerformed

    private void addictCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addictCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addictCheckboxActionPerformed

    private void placeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_placeComboActionPerformed

    private void codeInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_codeInputFocusGained
        codeInput.setText(null);
    }//GEN-LAST:event_codeInputFocusGained

    private void memoryPbCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memoryPbCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_memoryPbCheckboxActionPerformed

    private void drugCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drugCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drugCheckboxActionPerformed

    private void psychoTrCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_psychoTrCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_psychoTrCheckboxActionPerformed

    private void headCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_headCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_headCheckboxActionPerformed

    private void neuroTrCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_neuroTrCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_neuroTrCheckboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserDialog dialog = new UserDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addictCheckbox;
    private javax.swing.JTextField ageInput;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JPanel basicInformation;
    private javax.swing.JTextField codeInput;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JLabel codeLabel1;
    private javax.swing.JPanel detailedInformation;
    private javax.swing.JCheckBox drugCheckbox;
    private javax.swing.JTextField educationYearsInput;
    private javax.swing.JLabel educationYearsLabel;
    private javax.swing.JComboBox genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JComboBox handInput;
    private javax.swing.JCheckBox headCheckbox;
    private javax.swing.JCheckBox memoryPbCheckbox;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JCheckBox neuroTrCheckbox;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox placeCombo;
    private javax.swing.JCheckBox psychoTrCheckbox;
    private javax.swing.JTextField surnameInput;
    private javax.swing.JLabel surnameLabel;
    private javax.swing.JTabbedPane userPane;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

   
    void disableButton() {
        this.okButton.setVisible(false);
    }


    int getPlace() {
        return this.place;
    }

    /**
     * @return the headInj
     */
    public int getHeadInjuries() {
        return (this.headInj?1:2);
    }

    /**
     * @return the addict
     */
    public int getAddictions() {
        return (this.addict?1:2);
    }

    /**
     * @return the neurotr
     */
    public int getNeurotreatment() {
        return (this.neurotr?1:2);
    }

    /**
     * @return the psychotr
     */
    public int getPsychotreatment() {
        return (this.psychotr?1:2);
    }

    /**
     * @return the onDrugs
     */
    public int getOnDrugs() {
        return (this.onDrugs?1:2);
    }

    /**
     * @return the memoryPb
     */
    public int getMemoryPb() {
        return (this.memoryPb?1:2);
    }
}
